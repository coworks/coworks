<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<!-- <beans:property name="contentType" value="text/html; charset=UTF-8"/> -->
	</beans:bean>

	<context:component-scan base-package="com.kh.coworks" />

	<!-- 파일 업로드 전용 MultipartResolver 등록 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760" />
		<!-- 10MB -->
	</beans:bean>
	<!-- <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> <beans:property name="host" value="smtp.gmail.com" /> <beans:property name="port" value="587" /> <beans:property 
		name="username" value="kyurin123@gmail.com" /> <beans:property name="password" value="zizi1069" /> <beans:property name="javaMailProperties"> <beans:props> <beans:prop key="mail.transport.protocol">smtp</beans:prop> 
		<beans:prop key="mail.smtp.auth">true</beans:prop> <beans:prop key="mail.smtp.starttls.enable">true</beans:prop> <beans:prop key="mail.debug">true</beans:prop> <beans:prop key="mail.smtp.starttls.enable"> 
		true </beans:prop> </beans:props> </beans:property> </beans:bean> -->

	<!-- 2. jsonView와 viewResolver 등록하기 -->
	<!-- 요청한 viewName과 실제bean이름을 매핑해주는 BeanNameViewResolver를 사용함. -->
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1" />
	</beans:bean>

	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView" />

	<!-- 4. HttpMessageConverter 등록하기 (Spring 5.x.x 버전부터 Jackson2 버전으로 제공) -->
	<beans:bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />

	<!-- 3. @ResponseBody 어노테이션 등록하기 -->
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jacksonMessageConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<interceptors>
		<interceptor>   <!-- /** <- 모든 url 경로에 대해서 수행하도록 등록한다. -->
			<mapping path="/**" />
			<beans:bean id="loggerInterceptor" class="com.kh.coworks.common.interceptor.LoggerInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/calendar/**/*" />
			<mapping path="/approval/**/*" />
			<mapping path="/authority/**/*" />
			<mapping path="/bulletinboard/**/*" />
			<mapping path="/documentboard/**/*" />
			<mapping path="/education/**/*" />
			<mapping path="/employee/**/*" />
			<mapping path="/mail/**/*" />
			<mapping path="/mypage/**/*" />
			<mapping path="/survey/**/*" />
			<mapping path="/chat/**/*" />
			<mapping path="/dm/**/*" />
			<mapping path="/todo/**/*" />
			<mapping path="/contact/**/*" />
			<mapping path="/pay/**/*" />
			<mapping path="/commonProcessing.do" />

			<mapping path="/common/gomain.do" />
			<!-- ★★★★★ 추가해주세요 여러분 ~ (세션없이 넘어갈수 없게)★★★★★★ -->
			<exclude-mapping path="/employee/empEmail.do"/>

			<!-- <mapping path="/board/**/*.do"/> -->

			<!-- 스프링 3.2버전부터 exclude라는 태그가 도입되었음 인터셉터로 url을 가져올때 특정 경로를 제외할 수 있다. -->
			<!-- <exclude-mapping path="/board/boardList.do"/> -->
			<beans:bean id="loginCheckInterceptor" class="com.kh.coworks.common.interceptor.LoginCheckInterceptor" />
		</interceptor>

	</interceptors>

	<!-- 웹 소켓 핸들러 -->
	<beans:bean id="approvalHandler" class="com.kh.coworks.websocket.SocketHandler" />
	<beans:bean id="DMHandler" class="com.kh.coworks.websocket.DMHandler" />
	<beans:bean id="chatHandler" class="com.kh.coworks.websocket.chatHandler" />
	<beans:bean id="chatviewHandler" class="com.kh.coworks.websocket.chatviewHandler" />

	<websocket:handlers>
		<websocket:mapping path="/approvalCount" handler="approvalHandler" />
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>
		<websocket:sockjs />
	</websocket:handlers>
	
	<websocket:handlers>
		<websocket:mapping path="/DMCount" handler="DMHandler" />
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>
		<websocket:sockjs />
	</websocket:handlers>
	
	<websocket:handlers>
		<websocket:mapping path="/chatTop" handler="chatHandler" />
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>
		<websocket:sockjs />
	</websocket:handlers>
	
	<websocket:handlers>
		<websocket:mapping path="/chatting" handler="chatviewHandler" />
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>
		<websocket:sockjs />
	</websocket:handlers>




</beans:beans>